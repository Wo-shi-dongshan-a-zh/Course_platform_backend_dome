<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.second.dao.BookDao">
    <resultMap id="BaseResultMap" type="com.example.second.entity.Book">
        <id column="uid" property="uid" jdbcType="BIGINT"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="author" property="author" jdbcType="VARCHAR"/>
    </resultMap>
    <sql id="Base_Column_List">
        uid, name,author
    </sql>

    <select id="findAllBooks" resultType="com.example.second.entity.Book">
        select * from book
    </select>

    <select id="findBookByName" parameterType="java.lang.String" resultMap="BaseResultMap">
        select * from book where name = #{name,jdbcType=VARCHAR}
    </select>

    <delete id="deleteBooksByIds">
        delete from book where uid in
        <foreach collection="ids" item="id" separator="," open="(" close=")">
            #{id}
        </foreach>
    </delete>

    <select id="getCountBooks" resultType="java.lang.Integer">
        select count(uid) as count from book
    </select>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        from book
        where uid = #{uid,jdbcType=BIGINT}
    </select>
    <delete id="deleteBookById" parameterType="java.lang.Long">
        delete from book
        where uid = #{uid,jdbcType=BIGINT}
    </delete>

    <insert id="insert" parameterType="com.example.second.entity.Book">
        insert into book (uid, name,
        author)
        values (#{uid,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR},
        #{author,jdbcType=VARCHAR})
    </insert>
    <insert id="addBook" parameterType="com.example.second.entity.Book">
        insert into book
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="uid != null">
                uid,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="author != null">
                author,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="uid != null">
                #{uid,jdbcType=BIGINT},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="author != null">
                #{author,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateBook" parameterType="com.example.second.entity.Book">
        update book
        <set>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="author != null">
                author = #{author,jdbcType=VARCHAR},
            </if>
        </set>
        where uid = #{uid,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.example.second.entity.Book">
        update book
        set name = #{name,jdbcType=VARCHAR}
        author = #{author,jdbcType=VARCHAR}
        where uid = #{uid,jdbcType=BIGINT}
    </update>
</mapper>